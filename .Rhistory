ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter(alpha = 0.5) +
geom_violin() +
geom_boxplot(outlier.shape = NA, width=0.05) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter(alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus)) +
geom_boxplot(outlier.shape = NA, width=0.05) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter(alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus), alpha = 0.5) +
geom_boxplot(outlier.shape = NA, width=0.05) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter(alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(outlier.shape = NA, width=0.05) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_violin(aes(fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(outlier.shape = NA, width=0.05) +
geom_jitter(alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(outlier.shape = NA, width=0.05) +
geom_jitter(alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(aes(color = "gray", fill = "white"), alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
#geom_boxplot(aes(color = "gray", fill = "white"), alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(aes(color = "gray", fill = "white"), alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(aes(color = "white"), alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "white", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "gray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "darkgray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "darkgray", fill = "gray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "lightgray", fill = "gray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "lightgray", fill = "darkgray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "white", fill = "darkgray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
glmerOutNestTreatmentInfectionStatus <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
library(tidyverse)
library(EnvStats)
library(lme4)
library(lmerTest)
library(DHARMa)
library(car)
library(multcomp)
library(EnvStats)
library(glmmTMB)
library(multcomp)
glmerOutNestTreatmentInfectionStatus <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
AntTable <- read_csv(here::here("Data/outputAntTableMergedJoined.csv"))
InfectionStatus <- read_delim(here::here("Data/antInfectionStatus.csv"), delim = ";")
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus", "InfectionLoad", "Treatment")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus))  -> AntTableFull
glmerOutNestTreatmentInfectionStatus <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
testDispersion(glmerOutNestTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = glmerOutNestTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
summary(glmerOutNestTreatmentInfectionStatus)
posthocGlmerOutNestTreatmentInfectionStatus <- glht(glmerOutNestTreatmentInfectionStatus, linfct = mcp(TreatmentInfectionStatus = "Tukey"))
summary(posthocGlmerOutNestTreatmentInfectionStatus)
par(mar = c(4, 20, 2, 2))
plot(posthocGlmerOutNestTreatmentInfectionStatus)
lmerSpeedTreatmentInfectionStatus <- lmer(MeanSpeed ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull,)
testDispersion(lmerSpeedTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = lmerSpeedTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
Anova(lmerSpeedTreatmentInfectionStatus)
summary(lmerSpeedTreatmentInfectionStatus)
posthocLmerSpeedTreatmentInfectionStatus <- glht(lmerSpeedTreatmentInfectionStatus, linfct = mcp(TreatmentInfectionStatus = "Tukey"))
summary(posthocLmerSpeedTreatmentInfectionStatus)
plot(simulationOutput)
lmerSpeedTreatmentInfectionStatus <- lmer(MeanSpeed ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull)
library(tidyverse)
library(EnvStats)
library(lme4)
library(lmerTest)
library(DHARMa)
library(car)
library(multcomp)
library(EnvStats)
library(glmmTMB)
library(multcomp)
AntTable <- read_csv(here::here("Data/outputAntTableMergedJoined.csv"))
InfectionStatus <- read_delim(here::here("Data/antInfectionStatus.csv"), delim = ";")
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus", "InfectionLoad", "Treatment")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus))  -> AntTableFull
# linear mixed model
lmerSpeedTreatmentInfectionStatus <- lmer(MeanSpeed ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull)
testDispersion(lmerSpeedTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = lmerSpeedTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
summary(lmerSpeedTreatmentInfectionStatus)
posthocLmerSpeedTreatmentInfectionStatus <- glht(lmerSpeedTreatmentInfectionStatus, linfct = mcp(TreatmentInfectionStatus = "Tukey"))
summary(posthocLmerSpeedTreatmentInfectionStatus)
glmerOutNestTreatmentInfectionStatusSub1 <- glmer(Mean ~ TreatmentInfectionStatus + (1|ColonyID), data = subset(AntTableFull, TreatmentInfectionStatus == "X_uninfected" | TreatmentInfectionStatus == "X_infected"), family = binomial())
AntTable <- read_csv(here::here("Data/outputAntTableMergedJoined.csv"))
InfectionStatus <- read_delim(here::here("Data/antInfectionStatus.csv"), delim = ";")
library(tidyverse)
library(EnvStats)
library(lmerTest)
library(DHARMa)
library(multcomp)
library(glmmTMB)
library(multcomp)
library(tidyverse)
library(EnvStats)
library(DHARMa)
library(multcomp)
library(glmmTMB)
library(multcomp)
AntTable <- read_csv(here::here("Data/outputAntTableMergedJoined.csv"))
InfectionStatus <- read_delim(here::here("Data/antInfectionStatus.csv"), delim = ";")
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus), color = "darkgray", lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = TreatmentInfectionStatus), fill = "darkgray", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = TreatmentInfectionStatus), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus), color = "darkgray", lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = TreatmentInfectionStatus), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus, color = TreatmentInfectionStatus), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = TreatmentInfectionStatus), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
library(tidyverse)
library(EnvStats)
library(DHARMa)
library(multcomp)
library(lme4)
library(glmmTMB)
library(multcomp)
AntTable <- read_csv(here::here("Data/outputAntTableMergedJoined.csv"))
InfectionStatus <- read_delim(here::here("Data/antInfectionStatus.csv"), delim = ";")
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus", "InfectionLoad", "Treatment")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus))  -> AntTableFull
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus, color = TreatmentInfectionStatus), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = TreatmentInfectionStatus), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
# Original model: glmer, family binomial
# Why it failed: this model treats each frame as independent observation,which is not the case in our data since there is massive correlation of the probability of being in/outside the nests between continuous frames
glmerBinomial <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1| ColonyID) , data = AntTableFull, family = binomial())
cov2cor(vcov(glmerBinomial)) # correlation X_infected - X_uninfected = 1
summary(glmerBinomial)
# Good model: glmmTMB, family beta
glmmTMBBeta <- glmmTMB(OutNestRatio ~ TreatmentInfectionStatus + (1| ColonyID), data = AntTableFull, family = beta_family())
foo <- vcov(glmmTMBBeta)
cov2cor(foo[[1]])
summary(glmmTMBBeta)
# Compare glmmTMB family gaussian
glmmTMBGaussian <- glmmTMB(OutNestRatio ~ TreatmentInfectionStatus + (1| ColonyID), data = AntTableFull, family = gaussian())
AIC(glmmTMBBeta, glmmTMBGaussian) # beta does a much better job
# Check model hypothesis with Dharma
testDispersion(glmmTMBBeta)
simulationOutput <- simulateResiduals(fittedModel = glmmTMBBeta, plot = F)
plot(simulationOutput)
# Post hoc analysis
posthoc_glmmTMBBeta <- glht(glmmTMBBeta, linfct = mcp(TreatmentInfectionStatus = "Tukey"))
summary(posthoc_glmmTMBBeta)
par(mar = c(4, 20, 2, 2))
plot(posthocGlmerOutNestTreatmentInfectionStatus)
?beta_family
install.packages("oddsratio")
library(oddsratio)
or_glm(AntTableFull, posthoc_glmmTMBBeta, incr, ci = 0.95)
or_glm(AntTableFull, glmmTMBBeta, incr, ci = 0.95)
or_glm(AntTableFull, glmmTMBBeta, incr, ci = 0.95)
exp(fixef(glmmTMBBeta))
class(posthocGlmerOutNestTreatmentInfectionStatus)
class(posthoc_glmmTMBBeta)
posthoc_glmmTMBBeta$coef
posthoc_glmmTMBBeta$vcov
coefficients(posthoc_glmmTMBBeta)
exp(coefficients(posthoc_glmmTMBBeta))
# calculate odds ratio via exp(coefficient)
1/exp(coefficients(posthoc_glmmTMBBeta))
# calculate inverted odds ratio via exp(coefficient)
exp(coefficients(posthoc_glmmTMBBeta))
summary(posthoc_glmmTMBBeta)
