filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID) %>%
sort(OutNestRatio) %>%
mutate(RankOutNestRatio = n())-> AntTableFull
View(AntTable)
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID)
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus))
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID) %>%
sort(OutNestRatio) %>%
mutate(RankOutNestRatio = n())-> AntTableFull
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus"))
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus","InfectionLoad")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID) %>%
sort(OutNestRatio) %>%
mutate(RankOutNestRatio = n())-> AntTableFull
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus","InfectionLoad")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID)
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "Treatment", "InfectionStatus","InfectionLoad")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID) %>%
sort(OutNestRatio) %>%
mutate(RankOutNestRatio = n())-> AntTableFull
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "Treatment", "InfectionStatus","InfectionLoad")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus))
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "Treatment", "InfectionStatus","InfectionLoad")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected")
View(AntTable)
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID) %>%
sort(OutNestRatio) %>%
mutate(RankOutNestRatio = n())-> AntTableFull
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID)
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID) %>%
arrange(OutNestRatio) %>%
mutate(RankOutNestRatio = n())-> AntTableFull
View(AntTableFull)
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%
group_by(ColonyID) %>%
arrange(OutNestRatio) %>%
mutate(RankOutNestRatio = row_number())-> AntTableFull
View(AntTableFull)
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%   group_by(ColonyID) %>%
group_by(ColonyID) %>%
arrange(InfectionLoad) %>%
mutate(RankInfectionLoad = row_number()) %>%
arrange(OutNestRatio) %>%
mutate(RankOutNestRatio = row_number()) %>%
arrange(MeanSpeed) %>%
mutate(RankMeanSpeed = row_number())-> AntTableWithRank
View(AntTableWithRank)
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%   group_by(ColonyID) %>%
group_by(ColonyID) %>%
arrange(InfectionLoad) %>%
mutate(RankInfectionLoad = row_number(),
RankInfectionLoad = ifelse(InfectionLoad == "NAN", NA, RankInfectionLoad)) %>%
arrange(OutNestRatio) %>%
mutate(RankOutNestRatio = row_number()) %>%
arrange(MeanSpeed) %>%
mutate(RankMeanSpeed = row_number())-> AntTableWithRank
View(AntTableWithRank)
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%   group_by(ColonyID) %>%
group_by(ColonyID) %>%
arrange(InfectionLoad) %>%
mutate(RankInfectionLoad = row_number(),
RankInfectionLoad = ifelse(InfectionLoad == "NaN", NA, RankInfectionLoad)) %>%
arrange(OutNestRatio) %>%
mutate(RankOutNestRatio = row_number()) %>%
arrange(MeanSpeed) %>%
mutate(RankMeanSpeed = row_number())-> AntTableWithRank
View(AntTableWithRank)
cor.test(AntTableFull$RankOutNestRatio, AntTableFull$RankInfectionLoad, method = "spearman", exact = FALSE)
>NA
?NA
numeric(NA)
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%   group_by(ColonyID) %>%
group_by(ColonyID) %>%
arrange(InfectionLoad) %>%
mutate(RankInfectionLoad = row_number(),
RankInfectionLoad = ifelse(InfectionLoad == "NaN", as.numeric(NA), RankInfectionLoad)) %>%
arrange(OutNestRatio) %>%
mutate(RankOutNestRatio = row_number()) %>%
arrange(MeanSpeed) %>%
mutate(RankMeanSpeed = row_number())-> AntTableWithRank
cor.test(AntTableFull$RankOutNestRatio, AntTableFull$RankInfectionLoad, method = "spearman", exact = FALSE)
View(AntTableFull)
cor.test(AntTableWithRank$RankOutNestRatio, AntTableWithRank$RankInfectionLoad, method = "spearman", exact = FALSE)
cor.test(AntTableWithRank$RankMeanSpeed, AntTableWithRank$RankInfectionLoad, method = "spearman", exact = FALSE)
AntTableWithRank %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter()
AntTableWithRank %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio, color = ColonyID)) +
geom_jitter()
cor.test(AntTableWithRank$RankOutNestRatio, AntTableWithRank$RankInfectionLoad, method = "spearman", exact = FALSE)
cor.test(AntTableWithRank$RankMeanSpeed, AntTableWithRank$RankInfectionLoad, method = "spearman", exact = FALSE)
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "X_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio, color = ColonyID)) +
geom_jitter()
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio, color = ColonyID)) +
geom_jitter()
?arrange
cor.test(AntTableWithRank$RankInfectionLoad, AntTableWithRank$RankOutNestRatio, method = "spearman", exact = FALSE)
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio, color = ColonyID)) +
geom_line() +
geom_jitter()
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio, color = ColonyID)) +
geom_smooth() +
geom_jitter()
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio, color = ColonyID)) +
geom_smooth(method='lm') +
geom_jitter()
ggplot(aes(RankInfectionLoad, RankOutNestRatio) +
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio)) +
geom_smooth(method='lm') +
geom_jitter()
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio)) +
geom_smooth(method='lm') +
geom_jitter()
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio)) +
geom_smooth(method='lm') +
geom_jitter()
, color = ColonyID)
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio, color = ColonyID)) +
geom_smooth(method='lm') +
geom_jitter()
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio)) +
geom_smooth(method='lm') +
geom_jitter()
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%   group_by(ColonyID) %>%
group_by(ColonyID) %>%
arrange(InfectionLoad, ) %>%
mutate(RankInfectionLoad = row_number(),
RankInfectionLoad = ifelse(InfectionLoad == "NaN", as.numeric(NA), RankInfectionLoad)) %>%
arrange(OutNestRatio) %>%
mutate(RankOutNestRatio = row_number()) %>%
arrange(MeanSpeed) %>%
mutate(RankMeanSpeed = row_number()) %>%
ungroup() -> AntTableWithRank
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio)) +
geom_smooth(method='lm') +
geom_jitter()
cor.test(AntTableWithRank$RankInfectionLoad, AntTableWithRank$RankOutNestRatio, method = "spearman", exact = FALSE)
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus", "InfectionLoad", "Treatment")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus))  -> AntTableFull
AntTableFull %>%
group_by(ColonyID) %>%
summarise(SDOutNestRatio = sd(OutNestRatio),
SDMeanSpeed = sd(MeanSpeed)) %>%
ungroup() ->ColonyTableFull
View(ColonyTableFull)
AntTableFull %>%
group_by(ColonyID, TreatmentInfectionStatus) %>%
summarise(SDOutNestRatio = sd(OutNestRatio),
SDMeanSpeed = sd(MeanSpeed)) %>%
ungroup() ->ColonyTableFull
ColonyTableFull %>%
ggplot(aes(x = TreatmentInfectionStatus, y = SDOutNestRatio)) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus, color = TreatmentInfectionStatus), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = TreatmentInfectionStatus), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
AntTableFull %>%
group_by(ColonyID, Treatments) %>%
summarise(SDOutNestRatio = sd(OutNestRatio),
SDMeanSpeed = sd(MeanSpeed)) %>%
ungroup() -> ColonyTableFull
ColonyTableFull %>%
ggplot(aes(x = Treatments, y = SDOutNestRatio)) +
geom_jitter(aes(color = Treatments), alpha = 0.5) +
geom_violin(aes(fill = Treatments, color = Treatments), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = Treatments), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
ColonyTableFull %>%
ggplot(aes(x = Treatment, y = SDOutNestRatio)) +
geom_jitter(aes(color = Treatment), alpha = 0.5) +
geom_violin(aes(fill = Treatment, color = Treatment), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = Treatment), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
AntTableFull %>%
group_by(ColonyID, Treatment) %>%
summarise(SDOutNestRatio = sd(OutNestRatio),
SDMeanSpeed = sd(MeanSpeed)) %>%
ungroup() -> ColonyTableFull
ColonyTableFull %>%
ggplot(aes(x = Treatment, y = SDOutNestRatio)) +
geom_jitter(aes(color = Treatment), alpha = 0.5) +
geom_violin(aes(fill = Treatment, color = Treatment), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = Treatment), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
?kruskal.test
kruskal.test(x = SDOutNestRatio, g = Treatment, data = ColonyTableFull)
AntTableFull %>%
group_by(ColonyID, Treatment) %>%
summarise(SDOutNestRatio = sd(OutNestRatio),
SDMeanSpeed = sd(MeanSpeed)) %>%
ungroup() -> ColonyTableFull
kruskal.test(x = SDOutNestRatio, g = Treatment, data = ColonyTableFull)
kruskal.test(x = ColonyTableFull$SDOutNestRatio, g = ColonyTableFull$Treatment )
dunn.test(ColonyTableFull$SDOutNestRatio, ColonyTableFull$Treatment, method = "bonferroni", altp = TRUE, table = TRUE)
install.packages("dunn.test")
library(dunn.test)
dunn.test(ColonyTableFull$SDOutNestRatio, ColonyTableFull$Treatment, method = "bonferroni", altp = TRUE, table = TRUE)
ColonyTableFull %>%
ggplot(aes(x = Treatment, y = SDMeanSpeed)) +
geom_jitter(aes(color = Treatment), alpha = 0.5) +
geom_violin(aes(fill = Treatment, color = Treatment), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = Treatment), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
kruskal.test(x = ColonyTableFull$SDMeanSpeed, g = ColonyTableFull$Treatment)
dunn.test(ColonyTableFull$SDMeanSpeed, ColonyTableFull$Treatment, method = "bonferroni", altp = TRUE, table = TRUE)
ColonyTableFull %>%
ggplot(aes(x = Treatment, y = SDOutNestRatio)) +
geom_jitter(aes(color = Treatment), alpha = 0.5) +
geom_violin(aes(fill = Treatment, color = Treatment), lwd=0.3, alpha = 0.4) +
geom_boxplot(aes(color = Treatment), fill = "white", alpha = 0.7, outlier.shape = NA, width=0.05) +
stat_n_text()+
theme_bw(base_size = 14) +
theme(legend.position = "bottom") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
kruskal.test(x = ColonyTableFull$SDOutNestRatio, g = ColonyTableFull$Treatment)
dunn.test(ColonyTableFull$SDOutNestRatio, ColonyTableFull$Treatment, method = "bonferroni", altp = TRUE, table = TRUE)
dunn.test(ColonyTableFull$SDOutNestRatio, ColonyTableFull$Treatment, method = "bonferroni")
, altp = TRUE, table = TRUE
?dunn.test
dunn.test(ColonyTableFull$SDOutNestRatio, ColonyTableFull$Treatment, method = "bonferroni", altp = TRUE, table = TRUE)
kruskal.test(x = ColonyTableFull$SDOutNestRatio, g = ColonyTableFull$Treatment)
AntTableFull %>%
group_by(ColonyID, Treatment) %>%
summarise(SDOutNestRatio = sd(OutNestRatio),
SDMeanSpeed = sd(MeanSpeed)) %>%
ungroup() -> ColonyTableFull
?dunn.test
cor.test(AntTableWithRank$RankInfectionLoad, AntTableWithRank$RankOutNestRatio, method = "spearman", exact = FALSE)
cor.test(AntTableWithRank$RankMeanSpeed, AntTableWithRank$RankInfectionLoad, method = "spearman", exact = FALSE)
ggplot(aes(RankInfectionLoad, RankOutNestRatio)) +
geom_smooth(method='lm') +
geom_jitter()
library(tidyverse)
AntTable <- read_csv("Data/outputAntTableMergedJoined.csv")
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") %>%   group_by(ColonyID) %>%
group_by(ColonyID) %>%
arrange(InfectionLoad, ) %>%
mutate(RankInfectionLoad = row_number(),
RankInfectionLoad = ifelse(InfectionLoad == "NaN", as.numeric(NA), RankInfectionLoad)) %>%
arrange(OutNestRatio) %>%
mutate(RankOutNestRatio = row_number()) %>%
arrange(MeanSpeed) %>%
mutate(RankMeanSpeed = row_number()) %>%
ungroup() -> AntTableWithRank
AntTableWithRank %>%
filter(TreatmentInfectionStatus == "T_infected") %>%
ggplot(aes(RankInfectionLoad, RankOutNestRatio)) +
geom_smooth(method='lm') +
geom_jitter()
cor.test(AntTableWithRank$RankInfectionLoad, AntTableWithRank$RankOutNestRatio, method = "spearman", exact = FALSE)
cor.test(AntTableWithRank$RankMeanSpeed, AntTableWithRank$RankInfectionLoad, method = "spearman", exact = FALSE)
library(lme4)
?subset
lmmer(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank)
lmer(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank)
lmerLoad <- lmer(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank)
summary(lmerLoad)
library(glmmTMB)
lmerLoad <- glmmTMB(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank, family = gaussian())
summary(lmerLoad)
cor.test(AntTableWithRank$RankInfectionLoad, AntTableWithRank$RankOutNestRatio, method = "spearman", exact = FALSE)
cor.test(AntTableWithRank$RankMeanSpeed, AntTableWithRank$RankInfectionLoad, method = "spearman", exact = FALSE)
testDispersion(lmerLoad)
simulationOutput <- simulateResiduals(fittedModel = lmerLoad, plot = F)
plot(simulationOutput)
lmerLoad <- glmmTMB(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank, family = gaussian())
summary(lmerLoad)
testDispersion(lmerLoad)
simulationOutput <- simulateResiduals(fittedModel = lmerLoad, plot = F)
plot(simulationOutput)
library(DHARMa)
lmerLoad <- glmmTMB(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank, family = gaussian())
summary(lmerLoad)
testDispersion(lmerLoad)
simulationOutput <- simulateResiduals(fittedModel = lmerLoad, plot = F)
plot(simulationOutput)
lmerLoad <- glmmTMB(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank, family = poisson())
summary(lmerLoad)
testDispersion(lmerLoad)
simulationOutput <- simulateResiduals(fittedModel = lmerLoad, plot = F)
plot(simulationOutput)
lmerLoad <- glmmTMB(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank, family = beta_family())
summary(lmerLoad)
testDispersion(lmerLoad)
simulationOutput <- simulateResiduals(fittedModel = lmerLoad, plot = F)
plot(simulationOutput)
summary(lmerLoad)
lmerOutLoad <- glmmTMB(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank, family = beta_family())
summary(lmerOutLoad)
testDispersion(lmerOutLoad)
simulationOutput <- simulateResiduals(fittedModel = lmerOutLoad, plot = F)
plot(simulationOutput)
testDispersion(lmerOutLoad)
summary(lmerOutLoad)
lmerOutLoad <- glmmTMB(OutNestRatio ~ InfectionLoad:TreatmentInfectionStatus + (1|ColonyID), data = AntTableWithRank, family = beta_family())
summary(lmerOutLoad)
lmerOutLoad <- glmmTMB(OutNestRatio ~ InfectionLoad*TreatmentInfectionStatus + (1|ColonyID), data = AntTableWithRank, family = beta_family())
summary(lmerOutLoad)
testDispersion(lmerOutLoad)
simulationOutput <- simulateResiduals(fittedModel = lmerOutLoad, plot = F)
plot(simulationOutput)
lmerSpeedLoad <- glmmTMB(MeanSpeed ~ InfectionLoad*TreatmentInfectionStatus + (1|ColonyID), data = AntTableWithRank, family = beta_family())
summary(lmerSpeedLoad)
testDispersion(lmerSpeedLoad)
simulationOutput <- simulateResiduals(fittedModel = lmerSpeedLoad, plot = F)
plot(simulationOutput)
lmerSpeedLoad <- glmmTMB(MeanSpeed ~ InfectionLoad*TreatmentInfectionStatus + (1|ColonyID), data = AntTableWithRank, family = beta_family())
lmerSpeedLoad <- glmmTMB(MeanSpeed ~ InfectionLoad*TreatmentInfectionStatus + (1|ColonyID), data = AntTableWithRank, family = gaussian())
summary(lmerSpeedLoad)
lmerOutLoad <- glmmTMB(OutNestRatio ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank, family = beta_family())
summary(lmerOutLoad)
lmerSpeedLoad <- glmmTMB(MeanSpeed ~ InfectionLoad + (1|ColonyID), data = AntTableWithRank, family = gaussian())
summary(lmerSpeedLoad)
library(tidyverse)
library(EnvStats)
library(lme4)
library(lmerTest)
library(DHARMa)
library(car)
library(multcomp)
library(EnvStats)
library(glmmTMB)
# load data
infectionDynamics <- read.csv("/Users/zli/Desktop/postTrack/InfectionDynamics/infection_dynamics.csv", sep = ";")
infectionDynamics$rep_cycle <- infectionDynamics$rep_cycle
# statistics
# there is zero inflation in one treatment
fit <- glmmTMB(Infec_intensity^(1/3) ~ Caste * rep_cycle  + (1|colony),  ziformula = ~rep_cycle, data = infectionDynamics)
testDispersion(fit)
testZeroInflation(fit)
simulationOutput <- simulateResiduals(fittedModel = fit, plot = F)
plot(simulationOutput)
Anova(fit, type = "II")
summary(fit)
infectionDynamics <- read.csv("InfectionDynamics/infection_dynamics.csv", sep = ";")
infectionDynamics$rep_cycle <- infectionDynamics$rep_cycle
# statistics
# there is zero inflation in one treatment
fit <- glmmTMB(Infec_intensity^(1/3) ~ Caste * rep_cycle  + (1|colony),  ziformula = ~rep_cycle, data = infectionDynamics)
testDispersion(fit)
testZeroInflation(fit)
simulationOutput <- simulateResiduals(fittedModel = fit, plot = F)
plot(simulationOutput)
Anova(fit, type = "II")
summary(fit)
?ziformula
?glmmTMB
# statistics
# there is zero inflation in one treatment
fit <- glmmTMB(Infec_intensity^(1/3) ~ Caste * rep_cycle  + (1|colony),  family = poisson(), ziformula = ~rep_cycle, data = infectionDynamics)
testDispersion(fit)
testZeroInflation(fit)
simulationOutput <- simulateResiduals(fittedModel = fit, plot = F)
# statistics
# there is zero inflation in one treatment
fit <- glmmTMB(Infec_intensity^(1/3) ~ Caste * rep_cycle  + (1|colony),  family = gaussain(), ziformula = ~rep_cycle, data = infectionDynamics)
testDispersion(fit)
testZeroInflation(fit)
simulationOutput <- simulateResiduals(fittedModel = fit, plot = F)
# statistics
# there is zero inflation in one treatment
fit <- glmmTMB(Infec_intensity^(1/3) ~ Caste * rep_cycle  + (1|colony),  family = gaussian(), ziformula = ~rep_cycle, data = infectionDynamics)
testDispersion(fit)
testZeroInflation(fit)
simulationOutput <- simulateResiduals(fittedModel = fit, plot = F)
plot(simulationOutput)
Anova(fit, type = "II")
summary(fit)
View(infectionDynamics)
infectionDynamics %>%
group_by(rep_cycle) %>%
summarise(mean = mean(Infec_intensity),
sd = sd(Infec_intensity))
