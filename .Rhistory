ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter(alpha = 0.5) +
geom_violin() +
geom_boxplot(outlier.shape = NA, width=0.05) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter(alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus)) +
geom_boxplot(outlier.shape = NA, width=0.05) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter(alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus), alpha = 0.5) +
geom_boxplot(outlier.shape = NA, width=0.05) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_jitter(alpha = 0.5) +
geom_violin(aes(fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(outlier.shape = NA, width=0.05) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio, color = TreatmentInfectionStatus)) +
geom_violin(aes(fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(outlier.shape = NA, width=0.05) +
geom_jitter(alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(outlier.shape = NA, width=0.05) +
geom_jitter(alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(aes(color = "gray", fill = "white"), alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
#geom_boxplot(aes(color = "gray", fill = "white"), alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(aes(color = "gray", fill = "white"), alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(aes(color = "white"), alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "white", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "gray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "darkgray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "darkgray", fill = "gray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "lightgray", fill = "gray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "lightgray", fill = "darkgray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
AntTableFull %>%
filter(AssignmentRate > 0.5) %>%
ggplot(aes(x = TreatmentInfectionStatus, y = OutNestRatio)) +
geom_violin(aes(color = TreatmentInfectionStatus, fill = TreatmentInfectionStatus), alpha = 0.4) +
geom_boxplot(color = "white", fill = "darkgray", alpha = 0.4, outlier.shape = NA, width=0.05) +
geom_jitter(aes(color = TreatmentInfectionStatus), alpha = 0.5) +
stat_n_text()
glmerOutNestTreatmentInfectionStatus <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
library(tidyverse)
library(EnvStats)
library(lme4)
library(lmerTest)
library(DHARMa)
library(car)
library(multcomp)
library(EnvStats)
library(glmmTMB)
library(multcomp)
glmerOutNestTreatmentInfectionStatus <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
AntTable <- read_csv(here::here("Data/outputAntTableMergedJoined.csv"))
InfectionStatus <- read_delim(here::here("Data/antInfectionStatus.csv"), delim = ";")
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus", "InfectionLoad", "Treatment")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus))  -> AntTableFull
glmerOutNestTreatmentInfectionStatus <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
testDispersion(glmerOutNestTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = glmerOutNestTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
summary(glmerOutNestTreatmentInfectionStatus)
posthocGlmerOutNestTreatmentInfectionStatus <- glht(glmerOutNestTreatmentInfectionStatus, linfct = mcp(TreatmentInfectionStatus = "Tukey"))
summary(posthocGlmerOutNestTreatmentInfectionStatus)
par(mar = c(4, 20, 2, 2))
plot(posthocGlmerOutNestTreatmentInfectionStatus)
lmerSpeedTreatmentInfectionStatus <- lmer(MeanSpeed ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull,)
testDispersion(lmerSpeedTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = lmerSpeedTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
Anova(lmerSpeedTreatmentInfectionStatus)
summary(lmerSpeedTreatmentInfectionStatus)
posthocLmerSpeedTreatmentInfectionStatus <- glht(lmerSpeedTreatmentInfectionStatus, linfct = mcp(TreatmentInfectionStatus = "Tukey"))
summary(posthocLmerSpeedTreatmentInfectionStatus)
plot(simulationOutput)
library(tidyverse)
library(EnvStats)
library(lme4)
library(spaMM)
library(lmerTest)
library(DHARMa)
library(car)
library(multcomp)
library(EnvStats)
library(glmmTMB)
library(multcomp)
AntTable <- read_csv(here::here("Data/outputAntTableMergedJoined.csv"))
InfectionStatus <- read_delim(here::here("Data/antInfectionStatus.csv"), delim = ";")
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus", "InfectionLoad", "Treatment")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus))  -> AntTableFull
# generalised linear mixed model
glmerOutNestTreatmentInfectionStatus <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
testDispersion(glmerOutNestTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = glmerOutNestTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
summary(glmerOutNestTreatmentInfectionStatus)
posthocGlmerOutNestTreatmentInfectionStatus <- glht(glmerOutNestTreatmentInfectionStatus, linfct = mcp(TreatmentInfectionStatus = "Tukey"))
summary(posthocGlmerOutNestTreatmentInfectionStatus)
par(mar = c(4, 20, 2, 2))
plot(posthocGlmerOutNestTreatmentInfectionStatus)
# glmerOutNestTreatmentInfectionStatusSub1 <- glmer(Mean ~ TreatmentInfectionStatus + (1|ColonyID), data = subset(AntTableFull, TreatmentInfectionStatus == "X_uninfected" | TreatmentInfectionStatus == "X_infected"), family = binomial())
# summary(glmerOutNestTreatmentInfectionStatusSub1)
# pValue = c(0.5,0.005,2e-16 )
# p.adjust(pValue, method = "bonferroni")
Anova(glmerOutNestTreatmentInfectionStatus)
glmerOutNestTreatmentInfectionStatus <- glmer(cbind(OutNestFrame, InNestFrame) ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
testDispersion(glmerOutNestTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = glmerOutNestTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
summary(glmerOutNestTreatmentInfectionStatus)
Anova(glmerOutNestTreatmentInfectionStatus)
View(AntTableFull)
glmerOutNestTreatmentInfectionStatus <- glmer(OutNestRatio ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
testDispersion(glmerOutNestTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = glmerOutNestTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
summary(glmerOutNestTreatmentInfectionStatus)
View(AntTableFull)
glmerOutNestTreatmentInfectionStatus <- glmer(OutNestRatio ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = poisson())
glmerOutNestTreatmentInfectionStatus <- glmer(OutNestRatio ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
library(tidyverse)
library(EnvStats)
library(lme4)
library(spaMM)
library(lmerTest)
library(DHARMa)
library(car)
library(multcomp)
library(EnvStats)
library(glmmTMB)
library(multcomp)
glmerOutNestTreatmentInfectionStatus <- glmer(OutNestRatio ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, family = binomial())
glmerOutNestTreatmentInfectionStatus <- lmer(OutNestRatio ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull)
testDispersion(glmerOutNestTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = glmerOutNestTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
hist(AntTableFull$OutNestRatio)
glmerOutNestTreatmentInfectionStatus <- glmmTMB(OutNestRatio ~ TreatmentInfectionStatus + (1|ColonyID), data = AntTableFull, ziformula = ~.)
testDispersion(glmerOutNestTreatmentInfectionStatus)
simulationOutput <- simulateResiduals(fittedModel = glmerOutNestTreatmentInfectionStatus, plot = F)
plot(simulationOutput)
summary(glmerOutNestTreatmentInfectionStatus)
posthocGlmerOutNestTreatmentInfectionStatus <- glht(glmerOutNestTreatmentInfectionStatus, linfct = mcp(TreatmentInfectionStatus = "Tukey"))
summary(posthocGlmerOutNestTreatmentInfectionStatus)
par(mar = c(4, 20, 2, 2))
plot(posthocGlmerOutNestTreatmentInfectionStatus)
summary(posthocGlmerOutNestTreatmentInfectionStatus)
View(InfectionStatus)
* Gitlab: enable via Selfservice
* OwnCloud for data storage, 200 GB by default
* Raven, Cobra: no proposals needed, open for all users
* Cobra: 3200 * 40 cores (2x with HT), islands of 636 nodes, SLES12
* Raven: 1600 * 72 cores (2x with HT), islands of 720 nodes, SLES15
https://docs.mpcdf.mpg.de
Login:
* 2FA enforced, no SSH keys
* reuse SSH connections via options ControlMaster, ProxyJump (see docs)
Software:
* via env modules
* module avail
* module load <package/version>
* module unload
* module purge (unload all)
* module [help|show] <package>
* find-moule ... (search)
library(tidyverse)
library(EnvStats)
library(lme4)
library(lmerTest)
library(DHARMa)
library(car)
library(multcomp)
library(EnvStats)
library(glmmTMB)
# load data
infectionDynamics <- read.csv("/Users/zli/Desktop/postTrack/InfectionDynamics/infection_dynamics.csv", sep = ";")
infectionDynamics$rep_cycle <- infectionDynamics$rep_cycle
# statistics
# there is zero inflation in one treatment
fit <- glmmTMB(Infec_intensity^(1/3) ~ Caste * rep_cycle  + (1|colony),  ziformula = ~rep_cycle, data = infectionDynamics)
testDispersion(fit)
testZeroInflation(fit)
simulationOutput <- simulateResiduals(fittedModel = fit, plot = F)
plot(simulationOutput)
Anova(fit, type = "II")
summary(fit)
?drop1
drop1(fit)
drop1(fit, scope = ~Caste : rep_cycle )
drop1(fit, scope = ~Caste : rep_cycle, test - c("LRT") )
drop1(fit, scope = ~Caste : rep_cycle, test = c("LRT") )
drop1(fit, scope = ~Caste : rep_cycle, test = c("Chisq","LRT") )
drop1(fit, scope = ~Caste : rep_cycle, test = "LRT" )
drop1(fit, test = "LRT" )
drop1(fit, scale = 0, test = "LRT" )
drop1(fit, scale = 0, test = "Chisq" )
drop1(fit, scale = 0, test = "Chisq" )
drop1(fit, scale = 0, test = "Chisq" )
drop1(fit, scale = 0, test = "Chisq" )
install.packages("pbkrtest")
library(pbkrtest)
?df
?pbkrtest::df
?pb-modcomp
?PBmodcomp
gmm2 <- update(gmm1, .~.-Caste : rep_cycle)
# statistics
# there is zero inflation in one treatment
gmm1 <- glmmTMB(Infec_intensity^(1/3) ~ Caste * rep_cycle  + (1|colony),  ziformula = ~rep_cycle, data = infectionDynamics)
gmm2 <- update(gmm1, .~.-Caste : rep_cycle)
anova(gmm1, gmm2)
PBmodcomp(gmm1, gmm2, cl=2)
anova(gmm1, gmm2)
?drop1
drop1(gmm1, scope = ~Caste : rep_cycle, scale = 0, test = "Chisq" )
drop1(gmm1, scope = ~Caste, scale = 0, test = "Chisq" )
drop1(gmm1, scope = ~rep_cycle, scale = 0, test = "Chisq" )
summary(fit)
library(tidyverse)
library(EnvStats)
library(lme4)
library(lmerTest)
library(DHARMa)
library(car)
library(multcomp)
library(EnvStats)
library(glmmTMB)
library(pbkrtest)
# load data
infectionDynamics <- read.csv("/Users/zli/Desktop/postTrack/InfectionDynamics/infection_dynamics.csv", sep = ";")
infectionDynamics$rep_cycle <- infectionDynamics$rep_cycle
ibrary(tidyverse)
AntTable <- read_csv("Data/outputAntTableMergedJoined.csv")
InfectionStatus <- read_delim("Data/antInfectionStatus.csv", delim = ";")
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") -> AntTableFull
ggplot(AntTableFull, aes(color = Treatment)) +
geom_jitter(aes(x = InfectionLoad, y = OutNestRatio), size = 2) +
scale_color_manual(name = "Colony Treatment", labels = c("Infected", "Mixed"), values = c("T" = "#D95319", "X" = "#7E2F8E")) +
xlab("Infection load (Number of nematodes)") +
ylab("Proportion of frames being outside the nest") +
theme_light(base_size = 14) +
theme(legend.position = "bottom")
left_join(AntTable, InfectionStatus, by = c("ColonyID", "Colour", "InfectionStatus")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") -> AntTableFull
left_join(AntTable, by = c("ColonyID", "Colour", "InfectionStatus")) %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") -> AntTableFull
left_join(AntTable, by = c("ColonyID", "Colour", "InfectionStatus"))
left_join(AntTable, by = c("ColonyID", "Colour", "InfectionStatus"))
left_join(AntTable, by = c("ColonyID", "Colour", "InfectionStatus"))
#left_join(, by = c("ColonyID", "Colour", "InfectionStatus")) %>%
AntTable %>%
mutate(
TreatmentInfectionStatus = as.factor(paste0(Treatment, "_", InfectionStatus)),
Treatment = as.factor(Treatment),
InfectionStatus = as.factor(InfectionStatus)) %>%
filter(TreatmentInfectionStatus != "C_uninfected" & TreatmentInfectionStatus != "X_uninfected") -> AntTableFull
cor.test(AntTableFull$OutNestRatio, AntTableFull$InfectionLoad, method = "spearman", exact = FALSE)
ggplot(AntTableFull, aes(color = Treatment)) +
geom_jitter(aes(x = InfectionLoad, y = OutNestRatio), size = 2) +
scale_color_manual(name = "Colony Treatment", labels = c("Infected", "Mixed"), values = c("T" = "#D95319", "X" = "#7E2F8E")) +
xlab("Infection load (Number of nematodes)") +
ylab("Proportion of frames being outside the nest") +
theme_light(base_size = 14) +
theme(legend.position = "bottom")
